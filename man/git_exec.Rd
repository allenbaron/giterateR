% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/exec.R
\name{git_exec}
\alias{git_exec}
\title{Execute Code against a Git Ref}
\usage{
git_exec(ref, fn, ..., repo = NULL, restore_head = TRUE)
}
\arguments{
\item{ref}{A \code{\link[git2r:checkout]{git2r::checkout()}} supported ref object or a string identifying
a Git ref (e.g. a branch name, tag name or commit hash). The \code{repo}
argument is required for string inputs.}

\item{fn}{A function to execute.}

\item{...}{Arguments passed to \code{fn.}}

\item{repo}{A \code{git2r::git_repository} object or
\href{git2r::discover_repository}{discoverable} path to a repository
(default: "."); \emph{required} if \code{ref} is a string.}

\item{restore_head}{Whether to restore the repository's HEAD to its original
position, as a boolean (default: \code{TRUE}).}
}
\value{
The result of \code{fn}.
}
\description{
Executes a function against a specified a Git repository reference.
\code{git_exec()} operates by checking out the reference and executing
the function. By default, \code{git_exec()} restores the repository to it's
original HEAD but restoration may fail if Git conflicts are generated by
\code{fn}.
}
